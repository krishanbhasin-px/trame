ARG BASE_IMAGE=ubuntu:20.04
FROM ${BASE_IMAGE}

# Necessary to install tzdata. It will default to UTC.
ENV DEBIAN_FRONTEND=noninteractive

# Make sure we enable all GPU if we have one
ENV NVIDIA_DRIVER_CAPABILITIES=all

RUN apt-get update && \
    apt-get install -y \
      wget \
      apache2 \
      apache2-dev \
      libapr1-dev \
      apache2-utils && \
    rm -rf /var/lib/apt/lists/*

COPY --from=tianon/gosu /gosu /usr/local/bin/

# Set up needed permissions and users
# - User groups:
#   - trame-user: non-privileged user for running and accessing data
#   - docker: group to be remapped to docker host group to allow docker in docker
#   - proxy-mapping: group for r/w on mapping file
# - Group IDs:
#   - 5001: proxy-mapping
#   - 5002: docker
#   - 5003: trame-user (if UID 1000 already exists)
RUN set -e && \
    # Create groups with consistent GIDs
    groupadd -f proxy-mapping -g 5001 && \
    groupadd -f docker -g 5002 && \
    # Handle user creation/modification based on whether UID 1000 exists
    if getent passwd 1000 > /dev/null; then \
      # User with UID 1000 already exists - adapt it
      existing_user=$(getent passwd 1000 | cut -d: -f1) && \
      existing_home=$(getent passwd 1000 | cut -d: -f6) && \
      # Create trame-user group with a different GID to avoid conflicts
      groupadd -f trame-user -g 5003 && \
      # Rename user to trame-user for consistency
      usermod -l trame-user $existing_user && \
      # Set primary group to trame-user
      usermod -g trame-user trame-user && \
      # Add to necessary groups
      usermod -a -G proxy-mapping,docker trame-user && \
      # Set home directory if needed
      if [ "$existing_home" != "/home/trame-user" ]; then \
        usermod -d /home/trame-user trame-user; \
      fi; \
    else \
      # No user with UID 1000 exists - create from scratch
      groupadd -f trame-user -g 5003 && \
      useradd -u 1000 -g trame-user -G proxy-mapping,docker -m -d /home/trame-user -s /sbin/nologin trame-user; \
    fi && \
    # Configure www-data user
    usermod -a -G proxy-mapping,trame-user www-data && \
    # Create necessary directories and set permissions
    mkdir -p /opt/trame && \
    chown -R trame-user:trame-user /opt/trame && \
    mkdir -p /home/trame-user && \
    chown -R trame-user:trame-user /home/trame-user && \
    touch /opt/trame/proxy-mapping.txt && \
    chown trame-user:proxy-mapping /opt/trame/proxy-mapping.txt && \
    chmod 660 /opt/trame/proxy-mapping.txt && \
    mkdir -p /deploy && \
    chown -R trame-user:trame-user /deploy

# Copy the apache configuration file into place
COPY config/apache/001-trame.conf /etc/apache2/sites-available/001-trame.conf
COPY config/apache/001-trame.tpl  /opt/trame/apache.tpl
COPY config/default-launcher.json /opt/trame/default-launcher.json

# Configure the apache web server
RUN a2enmod vhost_alias && \
    a2enmod proxy && \
    a2enmod proxy_http && \
    a2enmod proxy_wstunnel && \
    a2enmod rewrite && \
    a2enmod headers && \
    a2dissite 000-default.conf && \
    a2ensite 001-trame && \
    a2dismod autoindex -f

# Copy the scripts into place
COPY scripts/* /opt/trame/

# Open port 80 to the world outside the container
EXPOSE 80

ENTRYPOINT ["/opt/trame/entrypoint.sh"]